"use strict";var J=Object.defineProperty;var H=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var V=Object.prototype.hasOwnProperty;var M=(e,t)=>{for(var r in t)J(e,r,{get:t[r],enumerable:!0})},B=(e,t,r,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of _(t))!V.call(e,s)&&s!==r&&J(e,s,{get:()=>t[s],enumerable:!(a=H(t,s))||a.enumerable});return e};var q=e=>B(J({},"__esModule",{value:!0}),e);var Pa={};M(Pa,{acceptUserInvite:()=>ua,aggregate:()=>Jt,auth:()=>N,authenticateShare:()=>ma,authentication:()=>Z,clearCache:()=>Zo,compareContentVersion:()=>Qa,createCollection:()=>de,createComment:()=>ye,createContentVersion:()=>Be,createContentVersions:()=>Me,createDashboard:()=>le,createDashboards:()=>Se,createDirectus:()=>te,createField:()=>fe,createFlow:()=>Ce,createFlows:()=>Te,createFolder:()=>ge,createFolders:()=>Re,createItem:()=>De,createItems:()=>be,createNotification:()=>Pe,createNotifications:()=>Oe,createOperation:()=>Ie,createOperations:()=>je,createPanel:()=>Fe,createPanels:()=>Ae,createPermission:()=>we,createPermissions:()=>Ee,createPolicies:()=>Ne,createPolicy:()=>ve,createPreset:()=>Je,createPresets:()=>Ue,createRelation:()=>$e,createRole:()=>Ge,createRoles:()=>ke,createShare:()=>We,createShares:()=>Ke,createTranslation:()=>He,createTranslations:()=>Le,createUser:()=>Ve,createUsers:()=>_e,createWebhook:()=>ze,createWebhooks:()=>qe,customEndpoint:()=>Oa,deleteCollection:()=>Ye,deleteComment:()=>Xe,deleteContentVersion:()=>Et,deleteContentVersions:()=>Ft,deleteDashboard:()=>et,deleteDashboards:()=>Ze,deleteField:()=>tt,deleteFile:()=>ot,deleteFiles:()=>rt,deleteFlow:()=>st,deleteFlows:()=>at,deleteFolder:()=>it,deleteFolders:()=>mt,deleteItem:()=>ct,deleteItems:()=>nt,deleteNotification:()=>ut,deleteNotifications:()=>pt,deleteOperation:()=>yt,deleteOperations:()=>ht,deletePanel:()=>St,deletePanels:()=>dt,deletePermission:()=>ft,deletePermissions:()=>lt,deletePolicies:()=>Qt,deletePolicy:()=>xt,deletePreset:()=>Ct,deletePresets:()=>Tt,deleteRelation:()=>Rt,deleteRole:()=>bt,deleteRoles:()=>gt,deleteShare:()=>Ot,deleteShares:()=>Dt,deleteTranslation:()=>jt,deleteTranslations:()=>Pt,deleteUser:()=>At,deleteUsers:()=>It,deleteWebhook:()=>Nt,deleteWebhooks:()=>wt,disableTwoFactor:()=>la,enableTwoFactor:()=>Sa,formatFields:()=>U,generateHash:()=>ra,generateTwoFactorSecret:()=>da,generateUid:()=>v,getAuthEndpoint:()=>F,graphql:()=>oe,importFile:()=>xe,inviteShare:()=>ia,inviteUser:()=>pa,login:()=>ie,logout:()=>ne,memoryStorage:()=>k,messageCallback:()=>E,passwordRequest:()=>ce,passwordReset:()=>pe,pong:()=>G,promoteContentVersion:()=>xa,queryToParams:()=>$,randomString:()=>Ta,readActivities:()=>vt,readActivity:()=>Ut,readAssetArrayBuffer:()=>Gt,readAssetBlob:()=>kt,readAssetRaw:()=>$t,readCollection:()=>Wt,readCollections:()=>Kt,readContentVersion:()=>Ur,readContentVersions:()=>vr,readDashboard:()=>Ht,readDashboards:()=>Lt,readExtensions:()=>_t,readField:()=>Bt,readFields:()=>Vt,readFieldsByCollection:()=>Mt,readFile:()=>zt,readFiles:()=>qt,readFlow:()=>Yt,readFlows:()=>Xt,readFolder:()=>er,readFolders:()=>Zt,readGraphqlSdl:()=>Wr,readItem:()=>rr,readItemPermissions:()=>ur,readItems:()=>tr,readMe:()=>Nr,readNotification:()=>ar,readNotifications:()=>or,readOpenApiSpec:()=>_r,readOperation:()=>mr,readOperations:()=>sr,readPanel:()=>nr,readPanels:()=>ir,readPermission:()=>pr,readPermissions:()=>cr,readPolicies:()=>yr,readPolicy:()=>dr,readPolicyGlobals:()=>Sr,readPreset:()=>fr,readPresets:()=>lr,readProviders:()=>ue,readRelation:()=>Tr,readRelationByCollection:()=>xr,readRelations:()=>Qr,readRevision:()=>Rr,readRevisions:()=>Cr,readRole:()=>br,readRoles:()=>gr,readRolesMe:()=>Dr,readSettings:()=>Or,readShare:()=>jr,readShareInfo:()=>na,readShares:()=>Pr,readSingleton:()=>Ir,readTranslation:()=>Fr,readTranslations:()=>Ar,readUser:()=>wr,readUserPermissions:()=>hr,readUsers:()=>Er,readWebhook:()=>$r,readWebhooks:()=>Jr,realtime:()=>se,refresh:()=>he,registerUser:()=>ha,registerUserVerify:()=>ya,rest:()=>Ra,saveToContentVersion:()=>fa,schemaApply:()=>kr,schemaDiff:()=>Gr,schemaSnapshot:()=>Kr,serverHealth:()=>Lr,serverInfo:()=>Hr,serverPing:()=>Vr,sleep:()=>me,staticToken:()=>ee,throwIfCoreCollection:()=>Q,throwIfEmpty:()=>o,triggerFlow:()=>ta,triggerOperation:()=>sa,updateCollection:()=>Br,updateCollectionsBatch:()=>qr,updateComment:()=>Mr,updateContentVersion:()=>zo,updateContentVersions:()=>Bo,updateContentVersionsBatch:()=>qo,updateDashboard:()=>Yr,updateDashboards:()=>zr,updateDashboardsBatch:()=>Xr,updateExtension:()=>Zr,updateField:()=>eo,updateFile:()=>oo,updateFiles:()=>to,updateFilesBatch:()=>ro,updateFlow:()=>mo,updateFlows:()=>ao,updateFlowsBatch:()=>so,updateFolder:()=>co,updateFolders:()=>io,updateFoldersBatch:()=>no,updateItem:()=>ho,updateItems:()=>po,updateItemsBatch:()=>uo,updateMe:()=>Mo,updateNotification:()=>lo,updateNotifications:()=>yo,updateNotificationsBatch:()=>So,updateOperation:()=>xo,updateOperations:()=>fo,updateOperationsBatch:()=>Qo,updatePanel:()=>Ro,updatePanels:()=>To,updatePanelsBatch:()=>Co,updatePermission:()=>Do,updatePermissions:()=>go,updatePermissionsBatch:()=>bo,updatePolicies:()=>Oo,updatePoliciesBatch:()=>Po,updatePolicy:()=>jo,updatePreset:()=>Fo,updatePresets:()=>Io,updatePresetsBatch:()=>Ao,updateRelation:()=>Eo,updateRole:()=>vo,updateRoles:()=>wo,updateRolesBatch:()=>No,updateSettings:()=>Uo,updateShare:()=>ko,updateShares:()=>Jo,updateSharesBatch:()=>$o,updateSingleton:()=>Go,updateTranslation:()=>Lo,updateTranslations:()=>Ko,updateTranslationsBatch:()=>Wo,updateUser:()=>Vo,updateUsers:()=>Ho,updateUsersBatch:()=>_o,updateWebhook:()=>Yo,updateWebhooks:()=>Xo,uploadFiles:()=>Qe,utilitySort:()=>ca,utilsExport:()=>ea,utilsImport:()=>aa,verifyHash:()=>oa,withOptions:()=>ga,withSearch:()=>ba,withToken:()=>Da});module.exports=q(Pa);function F(e){return e?`/auth/login/${e}`:"/auth/login"}var w="/",z=(e,t)=>(e.endsWith(w)&&(e=e.slice(0,-1)),t.startsWith(w)||(t=w+t),e+t),g=(e,t,r)=>{let a=e.pathname===w?t:z(e.pathname,t),s=new globalThis.URL(a,e);if(r)for(let[c,i]of Object.entries($(r)))if(i&&typeof i=="object"&&!Array.isArray(i))for(let[p,u]of Object.entries(i))s.searchParams.set(`${c}[${p}]`,String(u));else s.searchParams.set(c,i);return s};function K(e){return typeof e!="object"||!e?!1:"headers"in e&&"ok"in e&&"json"in e&&typeof e.json=="function"&&"text"in e&&typeof e.json=="function"}async function W(e){if(!(typeof e!="object"||!e)){if(K(e)){let t=e.headers.get("Content-Type")?.toLowerCase();if(t?.startsWith("application/json")||t?.startsWith("application/health+json")){let r=await e.json();if(!e.ok)throw r;return"data"in r?r.data:r}if(t?.startsWith("text/html")||t?.startsWith("text/plain")){let r=await e.text();if(!e.ok)throw r;return r}return e}return"data"in e?e.data:e}}var b=async(e,t,r=globalThis.fetch)=>(t.headers=typeof t.headers=="object"&&!Array.isArray(t.headers)?t.headers:{},r(e,t).then(a=>W(a).catch(s=>{let c=typeof s=="object"&&"errors"in s?s.errors:s;return Promise.reject({errors:c,response:a})})));var k=()=>{let e=null;return{get:async()=>e,set:async t=>{e=t}}};var X={msRefreshBeforeExpires:3e4,autoRefresh:!0},Y=2**31-1,Z=(e="cookie",t={})=>r=>{let a={...X,...t},s=null,c=null,i=a.storage??k(),p=async()=>i.set({access_token:null,refresh_token:null,expires:null,expires_at:null}),u=async()=>{try{await s}finally{s=null}},f=async()=>{let h=await i.get();return s||!h?.expires_at||h.expires_at<new Date().getTime()+a.msRefreshBeforeExpires&&I().catch(l=>{}),u()},D=async h=>{let l=h.expires??0;h.expires_at=new Date().getTime()+l,await i.set(h),a.autoRefresh&&l>a.msRefreshBeforeExpires&&l<Y&&(c&&clearTimeout(c),c=setTimeout(()=>{c=null,I().catch(x=>{})},l-a.msRefreshBeforeExpires))},I=async()=>(s=(async()=>{let l=await i.get();await p();let x={method:"POST",headers:{"Content-Type":"application/json"}};"credentials"in a&&(x.credentials=a.credentials);let C={mode:e};e==="json"&&l?.refresh_token&&(C.refresh_token=l.refresh_token),x.body=JSON.stringify(C);let m=g(r.url,"/auth/refresh");return b(m.toString(),x,r.globals.fetch).then(n=>D(n).then(()=>n))})(),s);return{refresh:I,async login(h,l,x={}){await p();let C={email:h,password:l};"otp"in x&&(C.otp=x.otp),C.mode=x.mode??e;let m=F(x.provider),n=g(r.url,m),y={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(C)};"credentials"in a&&(y.credentials=a.credentials);let d=await b(n.toString(),y,r.globals.fetch);return await D(d),d},async logout(){let h=await i.get(),l={method:"POST",headers:{"Content-Type":"application/json"}};"credentials"in a&&(l.credentials=a.credentials);let x={mode:e};e==="json"&&h?.refresh_token&&(x.refresh_token=h.refresh_token),l.body=JSON.stringify(x);let C=g(r.url,"/auth/logout");await b(C.toString(),l,r.globals.fetch),this.stopRefreshing(),await p()},stopRefreshing(){c&&clearTimeout(c)},async getToken(){return await f().catch(()=>{}),(await i.get())?.access_token??null},async setToken(h){return i.set({access_token:h,refresh_token:null,expires:null,expires_at:null})}}};var ee=e=>t=>{let r=e??null;return{async getToken(){return r},async setToken(a){r=a}}};var L={fetch:globalThis.fetch,WebSocket:globalThis.WebSocket,URL:globalThis.URL,logger:globalThis.console},te=(e,t={})=>{let r=t.globals?{...L,...t.globals}:L;return{globals:r,url:new r.URL(e),with(a){return{...this,...a(this)}}}};var re={},oe=(e={})=>t=>{let r={...re,...e};return{async query(a,s,c="items"){let i={method:"POST",body:JSON.stringify({query:a,variables:s})};"credentials"in r&&(i.credentials=r.credentials);let p={};if("getToken"in this){let D=await this.getToken();D&&(p.Authorization=`Bearer ${D}`)}"Content-Type"in p||(p["Content-Type"]="application/json"),i.headers=p;let u=c==="items"?"/graphql":"/graphql/system",f=g(t.url,u);return await b(f.toString(),i,t.globals.fetch)}}};function N(e){return JSON.stringify({...e,type:"auth"})}var G=()=>JSON.stringify({type:"pong"});function*v(){let e=1;for(;;)yield String(e),e++}var E=(e,t=1e3)=>new Promise((r,a)=>{let s=u=>{try{let f=JSON.parse(u.data);typeof f=="object"&&!Array.isArray(f)&&f!==null?(i(),r(f)):(i(),c())}catch{i(),r(u)}},c=()=>a(),i=()=>{clearTimeout(p),e.removeEventListener("message",s),e.removeEventListener("error",c),e.removeEventListener("close",c)};e.addEventListener("message",s),e.addEventListener("error",c),e.addEventListener("close",c);let p=setTimeout(()=>{i(),r(void 0)},t)});var ae={authMode:"handshake",heartbeat:!0,debug:!1,reconnect:{delay:1e3,retries:10}};function se(e={}){return t=>{e={...ae,...e};let r=v(),a={code:"closed"},s={attempts:0,active:!1},c=!1,i=new Set,p=m=>"getToken"in m,u=(m,...n)=>e.debug&&t.globals.logger[m]("[Directus SDK]",...n),f=async(m,n)=>{let y=new t.globals.URL(m);if(e.authMode==="strict"&&p(n)){let d=await n.getToken();d&&y.searchParams.set("access_token",d)}return y.toString()},D=async m=>{if("url"in e)return await f(e.url,m);if(["ws:","wss:"].includes(t.url.protocol))return await f(t.url,m);let n=new t.globals.URL(t.url.toString());return n.protocol=t.url.protocol==="https:"?"wss:":"ws:",n.pathname="/websocket",await f(n,m)},I=m=>{let n=new Promise((y,d)=>{if(!e.reconnect||c)return d();if(u("info",`reconnect #${s.attempts} `+(s.attempts>=e.reconnect.retries?"maximum retries reached":`trying again in ${Math.max(100,e.reconnect.delay)}ms`)),s.active)return s.active;if(s.attempts>=e.reconnect.retries)return s.attempts=-1,d();setTimeout(()=>m.connect().then(O=>(i.forEach(S=>{m.sendMessage(S)}),O)).then(y).catch(d),Math.max(100,e.reconnect.delay))});s.attempts+=1,s.active=n.catch(()=>{}).finally(()=>{s.active=!1})},h={open:new Set([]),error:new Set([]),close:new Set([]),message:new Set([])};function l(m){return"type"in m&&"status"in m&&"error"in m&&"code"in m.error&&"message"in m.error&&m.type==="auth"&&m.status==="error"}async function x(m,n){if(a.code==="open"){if(m.error.code==="TOKEN_EXPIRED"&&(u("warn","Authentication token expired!"),p(n))){let y=await n.getToken();if(!y)throw Error("No token for re-authenticating the websocket");a.connection.send(N({access_token:y}))}if(m.error.code==="AUTH_TIMEOUT")return a.firstMessage&&e.authMode==="public"?(u("warn",'Authentication failed! Currently the "authMode" is "public" try using "handshake" instead'),e.reconnect=!1):u("warn","Authentication timed out!"),a.connection.close();if(m.error.code==="AUTH_FAILED"){if(a.firstMessage&&e.authMode==="public")return u("warn",'Authentication failed! Currently the "authMode" is "public" try using "handshake" instead'),e.reconnect=!1,a.connection.close();u("warn","Authentication failed!")}}}let C=async m=>{for(;a.code==="open";){let n=await E(a.connection).catch(()=>{});if(n){if(l(n)){await x(n,m),a.firstMessage=!1;continue}if(e.heartbeat&&n.type==="ping"){a.connection.send(G()),a.firstMessage=!1;continue}h.message.forEach(y=>{a.code==="open"&&y.call(a.connection,n)}),a.firstMessage=!1}}};return{async connect(){if(c=!1,a.code==="connecting")return await a.connection;if(a.code!=="closed")throw new Error(`Cannot connect when state is "${a.code}"`);let m=this,n=await D(m);u("info",`Connecting to ${n}...`);let y=new Promise((d,O)=>{let S=!1,T=new t.globals.WebSocket(n);T.addEventListener("open",async P=>{if(u("info","Connection open."),a={code:"open",connection:T,firstMessage:!0},s.attempts=0,s.active=!1,C(m),e.authMode==="handshake"&&p(m)){let R=await m.getToken();if(!R)throw Error("No token for authenticating the websocket. Make sure to provide one or call the login() function beforehand.");T.send(N({access_token:R}));let A=await E(T);if(A&&"type"in A&&"status"in A&&A.type==="auth"&&A.status==="ok")u("info","Authentication successful!");else return O("Authentication failed while opening websocket connection")}h.open.forEach(R=>R.call(T,P)),S=!0,d(T)}),T.addEventListener("error",P=>{u("warn","Connection errored."),h.error.forEach(R=>R.call(T,P)),T.close(),a={code:"error"},S||O(P)}),T.addEventListener("close",P=>{u("info","Connection closed."),h.close.forEach(R=>R.call(T,P)),r=v(),a={code:"closed"},I(this),S||O(P)})});return a={code:"connecting",connection:y},y},disconnect(){c=!0,a.code==="open"&&a.connection.close()},onWebSocket(m,n){if(m==="message"){let y=function(d){if(typeof d.data!="string")return n.call(this,d);try{return n.call(this,JSON.parse(d.data))}catch{return n.call(this,d)}};return h[m].add(y),()=>h[m].delete(y)}return h[m].add(n),()=>h[m].delete(n)},sendMessage(m){if(a.code!=="open")throw new Error('Cannot send messages without an open connection. Make sure you are calling "await client.connect()".');if(typeof m=="string")return a.connection.send(m);"uid"in m||(m.uid=r.next().value),a.connection.send(JSON.stringify(m))},async subscribe(m,n={}){"uid"in n||(n.uid=r.next().value),i.add({...n,collection:m,type:"subscribe"}),a.code!=="open"&&(u("info","No connection available for subscribing!"),await this.connect()),this.sendMessage({...n,collection:m,type:"subscribe"});let y=!0;async function*d(){for(;y&&a.code==="open";){let S=await E(a.connection).catch(()=>{});if(S){if("type"in S&&"status"in S&&S.type==="subscribe"&&S.status==="error")throw S;"type"in S&&"uid"in S&&S.type==="subscription"&&S.uid===n.uid&&(yield S)}}e.reconnect&&s.active&&(await s.active,a.code==="open"&&(a.connection.send(JSON.stringify({...n,collection:m,type:"subscribe"})),yield*d()))}let O=()=>{i.delete({...n,collection:m,type:"subscribe"}),this.sendMessage({uid:n.uid,type:"unsubscribe"}),y=!1};return{subscription:d(),unsubscribe:O}}}}}var me=e=>new Promise(t=>setTimeout(()=>t(),e));var ie=(e,t,r={})=>()=>{let a=F(r.provider),s={email:e,password:t};return"otp"in r&&(s.otp=r.otp),s.mode=r.mode??"cookie",{path:a,method:"POST",body:JSON.stringify(s)}};var ne=(e,t="cookie")=>()=>({path:"/auth/logout",method:"POST",body:JSON.stringify(e?{refresh_token:e,mode:t}:{mode:t})});var ce=(e,t)=>()=>({path:"/auth/password/request",method:"POST",body:JSON.stringify({email:e,...t?{reset_url:t}:{}})});var pe=(e,t)=>()=>({path:"/auth/password/reset",method:"POST",body:JSON.stringify({token:e,password:t})});var ue=(e=!1)=>()=>({path:e?"/auth?sessionOnly":"/auth",method:"GET"});var he=(e="cookie",t)=>()=>({path:"/auth/refresh",method:"POST",body:JSON.stringify(e==="json"?{refresh_token:t,mode:e}:{mode:e})});var ye=(e,t)=>()=>({path:"/activity/comment",params:t??{},body:JSON.stringify(e),method:"POST"});var de=(e,t)=>()=>({path:"/collections",params:t??{},body:JSON.stringify(e),method:"POST"});var Se=(e,t)=>()=>({path:"/dashboards",params:t??{},body:JSON.stringify(e),method:"POST"}),le=(e,t)=>()=>({path:"/dashboards",params:t??{},body:JSON.stringify(e),method:"POST"});var fe=(e,t,r)=>()=>({path:`/fields/${e}`,params:r??{},body:JSON.stringify(t),method:"POST"});var Qe=(e,t)=>()=>({path:"/files",method:"POST",body:e,params:t??{},headers:{"Content-Type":"multipart/form-data"}}),xe=(e,t={},r)=>()=>({path:"/files/import",method:"POST",body:JSON.stringify({url:e,data:t}),params:r??{}});var Te=(e,t)=>()=>({path:"/flows",params:t??{},body:JSON.stringify(e),method:"POST"}),Ce=(e,t)=>()=>({path:"/flows",params:t??{},body:JSON.stringify(e),method:"POST"});var Re=(e,t)=>()=>({path:"/folders",params:t??{},body:JSON.stringify(e),method:"POST"}),ge=(e,t)=>()=>({path:"/folders",params:t??{},body:JSON.stringify(e),method:"POST"});function j(e){return["directus_access","directus_activity","directus_collections","directus_fields","directus_files","directus_folders","directus_migrations","directus_permissions","directus_policies","directus_presets","directus_relations","directus_revisions","directus_roles","directus_sessions","directus_settings","directus_users","directus_webhooks","directus_dashboards","directus_panels","directus_notifications","directus_shares","directus_flows","directus_operations","directus_translations","directus_versions","directus_extensions"].includes(e)}var be=(e,t,r)=>()=>{let a=String(e);if(j(a))throw new Error("Cannot use createItems for core collections");return{path:`/items/${a}`,params:r??{},body:JSON.stringify(t),method:"POST"}},De=(e,t,r)=>()=>{let a=String(e);if(j(a))throw new Error("Cannot use createItem for core collections");return{path:`/items/${a}`,params:r??{},body:JSON.stringify(t),method:"POST"}};var Oe=(e,t)=>()=>({path:"/notifications",params:t??{},body:JSON.stringify(e),method:"POST"}),Pe=(e,t)=>()=>({path:"/notifications",params:t??{},body:JSON.stringify(e),method:"POST"});var je=(e,t)=>()=>({path:"/operations",params:t??{},body:JSON.stringify(e),method:"POST"}),Ie=(e,t)=>()=>({path:"/operations",params:t??{},body:JSON.stringify(e),method:"POST"});var Ae=(e,t)=>()=>({path:"/panels",params:t??{},body:JSON.stringify(e),method:"POST"}),Fe=(e,t)=>()=>({path:"/panels",params:t??{},body:JSON.stringify(e),method:"POST"});var Ee=(e,t)=>()=>({path:"/permissions",params:t??{},body:JSON.stringify(e),method:"POST"}),we=(e,t)=>()=>({path:"/permissions",params:t??{},body:JSON.stringify(e),method:"POST"});var Ne=(e,t)=>()=>({path:"/policies",params:t??{},body:JSON.stringify(e),method:"POST"}),ve=(e,t)=>()=>({path:"/policies",params:t??{},body:JSON.stringify(e),method:"POST"});var Ue=(e,t)=>()=>({path:"/presets",params:t??{},body:JSON.stringify(e),method:"POST"}),Je=(e,t)=>()=>({path:"/presets",params:t??{},body:JSON.stringify(e),method:"POST"});var $e=e=>()=>({path:"/relations",body:JSON.stringify(e),method:"POST"});var ke=(e,t)=>()=>({path:"/roles",params:t??{},body:JSON.stringify(e),method:"POST"}),Ge=(e,t)=>()=>({path:"/roles",params:t??{},body:JSON.stringify(e),method:"POST"});var Ke=(e,t)=>()=>({path:"/shares",params:t??{},body:JSON.stringify(e),method:"POST"}),We=(e,t)=>()=>({path:"/shares",params:t??{},body:JSON.stringify(e),method:"POST"});var Le=(e,t)=>()=>({path:"/translations",params:t??{},body:JSON.stringify(e),method:"POST"}),He=(e,t)=>()=>({path:"/translations",params:t??{},body:JSON.stringify(e),method:"POST"});var _e=(e,t)=>()=>({path:"/users",params:t??{},body:JSON.stringify(e),method:"POST"}),Ve=(e,t)=>()=>({path:"/users",params:t??{},body:JSON.stringify(e),method:"POST"});var Me=(e,t)=>()=>({path:"/versions",params:t??{},body:JSON.stringify(e),method:"POST"}),Be=(e,t)=>()=>({path:"/versions",params:t??{},body:JSON.stringify(e),method:"POST"});var qe=(e,t)=>()=>({path:"/webhooks",params:t??{},body:JSON.stringify(e),method:"POST"}),ze=(e,t)=>()=>({path:"/webhooks",params:t??{},body:JSON.stringify(e),method:"POST"});var Xe=e=>()=>({path:`/activity/comment/${e}`,method:"DELETE"});var Ye=e=>()=>({path:`/collections/${e}`,method:"DELETE"});var U=e=>{let t=(r,a=[])=>{if(typeof r=="object"){let s=[];for(let c in r){let i=r[c]??[];if(Array.isArray(i))for(let p of i)s.push(t(p,[...a,c]));else if(typeof i=="object")for(let p of Object.keys(i)){let u=i[p];for(let f of u)s.push(t(f,[...a,`${c}:${p}`]))}}return s.flatMap(c=>c)}return[...a,String(r)].join(".")};return e.flatMap(r=>t(r))},$=e=>{let t={};Array.isArray(e.fields)&&e.fields.length>0&&(t.fields=U(e.fields).join(",")),e.filter&&Object.keys(e.filter).length>0&&(t.filter=JSON.stringify(e.filter)),e.search&&(t.search=e.search),"sort"in e&&e.sort&&(t.sort=typeof e.sort=="string"?e.sort:e.sort.join(",")),typeof e.limit=="number"&&e.limit>=-1&&(t.limit=String(e.limit)),typeof e.offset=="number"&&e.offset>=0&&(t.offset=String(e.offset)),typeof e.page=="number"&&e.page>=1&&(t.page=String(e.page)),e.deep&&Object.keys(e.deep).length>0&&(t.deep=JSON.stringify(e.deep)),e.alias&&Object.keys(e.alias).length>0&&(t.alias=JSON.stringify(e.alias)),e.aggregate&&Object.keys(e.aggregate).length>0&&(t.aggregate=JSON.stringify(e.aggregate)),e.groupBy&&e.groupBy.length>0&&(t.groupBy=e.groupBy.join(","));for(let[r,a]of Object.entries(e))r in t||(typeof a=="string"||typeof a=="number"||typeof a=="boolean"?t[r]=String(a):t[r]=JSON.stringify(a));return t};var o=(e,t)=>{if(e.length===0)throw new Error(t)};var Q=(e,t)=>{if(j(String(e)))throw new Error(t)};var Ze=e=>()=>(o(e,"Keys cannot be empty"),{path:"/dashboards",body:JSON.stringify(e),method:"DELETE"}),et=e=>()=>(o(e,"Key cannot be empty"),{path:`/dashboards/${e}`,method:"DELETE"});var tt=(e,t)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/fields/${e}/${t}`,method:"DELETE"});var rt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/files",body:JSON.stringify(e),method:"DELETE"}),ot=e=>()=>(o(e,"Key cannot be empty"),{path:`/files/${e}`,method:"DELETE"});var at=e=>()=>(o(e,"Keys cannot be empty"),{path:"/flows",body:JSON.stringify(e),method:"DELETE"}),st=e=>()=>(o(e,"Key cannot be empty"),{path:`/flows/${e}`,method:"DELETE"});var mt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/folders",body:JSON.stringify(e),method:"DELETE"}),it=e=>()=>(o(e,"Key cannot be empty"),{path:`/folders/${e}`,method:"DELETE"});var nt=(e,t)=>()=>{let r={};return o(String(e),"Collection cannot be empty"),Q(e,"Cannot use deleteItems for core collections"),Array.isArray(t)?(o(t,"keysOrQuery cannot be empty"),r={keys:t}):(o(Object.keys(t),"keysOrQuery cannot be empty"),r={query:t}),{path:`/items/${e}`,body:JSON.stringify(r),method:"DELETE"}},ct=(e,t)=>()=>(o(String(e),"Collection cannot be empty"),Q(e,"Cannot use deleteItem for core collections"),o(String(t),"Key cannot be empty"),{path:`/items/${e}/${t}`,method:"DELETE"});var pt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/notifications",body:JSON.stringify(e),method:"DELETE"}),ut=e=>()=>(o(e,"Key cannot be empty"),{path:`/notifications/${e}`,method:"DELETE"});var ht=e=>()=>(o(e,"Keys cannot be empty"),{path:"/operations",body:JSON.stringify(e),method:"DELETE"}),yt=e=>()=>(o(e,"Key cannot be empty"),{path:`/operations/${e}`,method:"DELETE"});var dt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/panels",body:JSON.stringify(e),method:"DELETE"}),St=e=>()=>(o(e,"Key cannot be empty"),{path:`/panels/${e}`,method:"DELETE"});var lt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/permissions",body:JSON.stringify(e),method:"DELETE"}),ft=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/permissions/${e}`,method:"DELETE"});var Qt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/policies",body:JSON.stringify(e),method:"DELETE"}),xt=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/policies/${e}`,method:"DELETE"});var Tt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/presets",body:JSON.stringify(e),method:"DELETE"}),Ct=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/presets/${e}`,method:"DELETE"});var Rt=(e,t)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/relations/${e}/${t}`,method:"DELETE"});var gt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/roles",body:JSON.stringify(e),method:"DELETE"}),bt=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/roles/${e}`,method:"DELETE"});var Dt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/shares",body:JSON.stringify(e),method:"DELETE"}),Ot=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/shares/${e}`,method:"DELETE"});var Pt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/translations",body:JSON.stringify(e),method:"DELETE"}),jt=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/translations/${e}`,method:"DELETE"});var It=e=>()=>(o(e,"Keys cannot be empty"),{path:"/users",body:JSON.stringify(e),method:"DELETE"}),At=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/users/${e}`,method:"DELETE"});var Ft=e=>()=>(o(e,"Keys cannot be empty"),{path:"/versions",body:JSON.stringify(e),method:"DELETE"}),Et=e=>()=>(o(e,"Key cannot be empty"),{path:`/versions/${e}`,method:"DELETE"});var wt=e=>()=>(o(e,"Keys cannot be empty"),{path:"/webhooks",body:JSON.stringify(e),method:"DELETE"}),Nt=e=>()=>(o(String(e),"Key cannot be empty"),{path:`/webhooks/${e}`,method:"DELETE"});var vt=e=>()=>({path:"/activity",params:e??{},method:"GET"}),Ut=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/activity/${e}`,params:t??{},method:"GET"});var Jt=(e,t)=>()=>{let r=String(e);return o(r,"Collection cannot be empty"),{path:j(r)?`/${r.substring(9)}`:`/items/${r}`,method:"GET",params:{...t.query??{},...t.groupBy?{groupBy:t.groupBy}:{},aggregate:t.aggregate}}};var $t=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/assets/${e}`,params:t??{},method:"GET",onResponse:r=>r.body}),kt=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/assets/${e}`,params:t??{},method:"GET",onResponse:r=>r.blob()}),Gt=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/assets/${e}`,params:t??{},method:"GET",onResponse:r=>r.arrayBuffer()});var Kt=()=>()=>({path:"/collections",method:"GET"}),Wt=e=>()=>(o(e,"Collection cannot be empty"),{path:`/collections/${e}`,method:"GET"});var Lt=e=>()=>({path:"/dashboards",params:e??{},method:"GET"}),Ht=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/dashboards/${e}`,params:t??{},method:"GET"});var _t=()=>()=>({path:"/extensions/",method:"GET"});var Vt=()=>()=>({path:"/fields",method:"GET"}),Mt=e=>()=>(o(e,"Collection cannot be empty"),{path:`/fields/${e}`,method:"GET"}),Bt=(e,t)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/fields/${e}/${t}`,method:"GET"});var qt=e=>()=>({path:"/files",params:e??{},method:"GET"}),zt=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/files/${e}`,params:t??{},method:"GET"});var Xt=e=>()=>({path:"/flows",params:e??{},method:"GET"}),Yt=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/flows/${e}`,params:t??{},method:"GET"});var Zt=e=>()=>({path:"/folders",params:e??{},method:"GET"}),er=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/folders/${e}`,params:t??{},method:"GET"});var tr=(e,t)=>()=>(o(String(e),"Collection cannot be empty"),Q(e,"Cannot use readItems for core collections"),{path:`/items/${e}`,params:t??{},method:"GET"}),rr=(e,t,r)=>()=>(o(String(e),"Collection cannot be empty"),Q(e,"Cannot use readItem for core collections"),o(String(t),"Key cannot be empty"),{path:`/items/${e}/${t}`,params:r??{},method:"GET"});var or=e=>()=>({path:"/notifications",params:e??{},method:"GET"}),ar=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/notifications/${e}`,params:t??{},method:"GET"});var sr=e=>()=>({path:"/operations",params:e??{},method:"GET"}),mr=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/operations/${e}`,params:t??{},method:"GET"});var ir=e=>()=>({path:"/panels",params:e??{},method:"GET"}),nr=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/panels/${e}`,params:t??{},method:"GET"});var cr=e=>()=>({path:"/permissions",params:e??{},method:"GET"}),pr=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/permissions/${e}`,params:t??{},method:"GET"}),ur=(e,t)=>()=>(o(String(e),"Collection cannot be empty"),{path:`/permissions/me/${t?`${e}/${t}`:`${e}`}`,method:"GET"}),hr=()=>()=>({path:"/permissions/me",method:"GET"});var yr=e=>()=>({path:"/policies",params:e??{},method:"GET"}),dr=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/policies/${e}`,params:t??{},method:"GET"}),Sr=()=>()=>({path:"/policies/me/globals",method:"GET"});var lr=e=>()=>({path:"/presets",params:e??{},method:"GET"}),fr=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/presets/${e}`,params:t??{},method:"GET"});var Qr=()=>()=>({path:"/relations",method:"GET"}),xr=e=>()=>({path:`/relations/${e}`,method:"GET"}),Tr=(e,t)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/relations/${e}/${t}`,method:"GET"});var Cr=e=>()=>({path:"/revisions",params:e??{},method:"GET"}),Rr=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/revisions/${e}`,params:t??{},method:"GET"});var gr=e=>()=>({path:"/roles",params:e??{},method:"GET"}),br=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/roles/${e}`,params:t??{},method:"GET"}),Dr=e=>()=>({path:"/roles/me",params:e??{},method:"GET"});var Or=e=>()=>({path:"/settings",params:e??{},method:"GET"});var Pr=e=>()=>({path:"/shares",params:e??{},method:"GET"}),jr=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/shares/${e}`,params:t??{},method:"GET"});var Ir=(e,t)=>()=>(o(String(e),"Collection cannot be empty"),Q(e,"Cannot use readSingleton for core collections"),{path:`/items/${e}`,params:t??{},method:"GET"});var Ar=e=>()=>({path:"/translations",params:e??{},method:"GET"}),Fr=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/translations/${e}`,params:t??{},method:"GET"});var Er=e=>()=>({path:"/users",params:e??{},method:"GET"}),wr=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/users/${e}`,params:t??{},method:"GET"}),Nr=e=>()=>({path:"/users/me",params:e??{},method:"GET"});var vr=e=>()=>({path:"/versions",params:e??{},method:"GET"}),Ur=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/versions/${e}`,params:t??{},method:"GET"});var Jr=e=>()=>({path:"/webhooks",params:e??{},method:"GET"}),$r=(e,t)=>()=>(o(String(e),"Key cannot be empty"),{path:`/webhooks/${e}`,params:t??{},method:"GET"});var kr=e=>()=>({method:"POST",path:"/schema/apply",body:JSON.stringify(e)});var Gr=(e,t=!1)=>()=>({method:"POST",path:"/schema/diff",params:t?{force:t}:{},body:JSON.stringify(e)});var Kr=()=>()=>({method:"GET",path:"/schema/snapshot"});var Wr=(e="item")=>()=>({method:"GET",path:e==="item"?"/server/specs/graphql":"/server/specs/graphql/system"});var Lr=()=>()=>({method:"GET",path:"/server/health"});var Hr=()=>()=>({method:"GET",path:"/server/info"});var _r=()=>()=>({method:"GET",path:"/server/specs/oas"});var Vr=()=>()=>({method:"GET",path:"/server/ping"});var Mr=(e,t,r)=>()=>(o(String(e),"Key cannot be empty"),{path:`/activity/comment/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Br=(e,t,r)=>()=>(o(e,"Collection cannot be empty"),{path:`/collections/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"}),qr=(e,t)=>()=>({path:"/collections",params:t??{},body:JSON.stringify(e),method:"PATCH"});var zr=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/dashboards",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Xr=(e,t)=>()=>({path:"/dashboards",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Yr=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/dashboards/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Zr=(e,t,r)=>()=>(e!==null&&o(e,"Bundle cannot be an empty string"),o(t,"Name cannot be empty"),{path:e?`/extensions/${e}/${t}`:`/extensions/${t}`,params:{},body:JSON.stringify(r),method:"PATCH"});var eo=(e,t,r,a)=>()=>(o(e,"Keys cannot be empty"),o(t,"Field cannot be empty"),{path:`/fields/${e}/${t}`,params:a??{},body:JSON.stringify(r),method:"PATCH"});var to=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/files",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),ro=(e,t)=>()=>({path:"/files",params:t??{},body:JSON.stringify(e),method:"PATCH"}),oo=(e,t,r)=>()=>(o(e,"Key cannot be empty"),t instanceof FormData?{path:`/files/${e}`,params:r??{},body:t,method:"PATCH",headers:{"Content-Type":"multipart/form-data"}}:{path:`/files/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var ao=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/flows",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),so=(e,t)=>()=>({path:"/flows",params:t??{},body:JSON.stringify(e),method:"PATCH"}),mo=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/flows/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var io=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/folders",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),no=(e,t)=>()=>({path:"/folders",params:t??{},body:JSON.stringify(e),method:"PATCH"}),co=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/folders/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var po=(e,t,r,a)=>()=>{let s={};return o(String(e),"Collection cannot be empty"),Q(e,"Cannot use updateItems for core collections"),Array.isArray(t)?(o(t,"keysOrQuery cannot be empty"),s={keys:t}):(o(Object.keys(t),"keysOrQuery cannot be empty"),s={query:t}),s.data=r,{path:`/items/${e}`,params:a??{},body:JSON.stringify(s),method:"PATCH"}},uo=(e,t,r)=>()=>(o(String(e),"Collection cannot be empty"),Q(e,"Cannot use updateItems for core collections"),{path:`/items/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"}),ho=(e,t,r,a)=>()=>(o(String(t),"Key cannot be empty"),o(String(e),"Collection cannot be empty"),Q(e,"Cannot use updateItem for core collections"),{path:`/items/${e}/${t}`,params:a??{},body:JSON.stringify(r),method:"PATCH"});var yo=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/notifications",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),So=(e,t)=>()=>({path:"/notifications",params:t??{},body:JSON.stringify(e),method:"PATCH"}),lo=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/notifications/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var fo=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/operations",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Qo=(e,t)=>()=>({path:"/operations",params:t??{},body:JSON.stringify(e),method:"PATCH"}),xo=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/operations/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var To=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/panels",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Co=(e,t)=>()=>({path:"/panels",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Ro=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/panels/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var go=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/permissions",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),bo=(e,t)=>()=>({path:"/permissions",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Do=(e,t,r)=>()=>(o(String(e),"Key cannot be empty"),{path:`/permissions/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Oo=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/policies",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Po=(e,t)=>()=>({path:"/policies",params:t??{},body:JSON.stringify(e),method:"PATCH"}),jo=(e,t,r)=>()=>(o(String(e),"Key cannot be empty"),{path:`/policies/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Io=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/presets",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Ao=(e,t)=>()=>({path:"/presets",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Fo=(e,t,r)=>()=>(o(String(e),"Key cannot be empty"),{path:`/presets/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Eo=(e,t,r,a)=>()=>(o(e,"Collection cannot be empty"),o(t,"Field cannot be empty"),{path:`/relations/${e}/${t}`,params:a??{},body:JSON.stringify(r),method:"PATCH"});var wo=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/roles",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),No=(e,t)=>()=>({path:"/roles",params:t??{},body:JSON.stringify(e),method:"PATCH"}),vo=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/roles/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Uo=(e,t)=>()=>({path:"/settings",params:t??{},body:JSON.stringify(e),method:"PATCH"});var Jo=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/shares",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),$o=(e,t)=>()=>({path:"/shares",params:t??{},body:JSON.stringify(e),method:"PATCH"}),ko=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/shares/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Go=(e,t,r)=>()=>(o(String(e),"Collection cannot be empty"),Q(e,"Cannot use updateSingleton for core collections"),{path:`/items/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Ko=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/translations",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Wo=(e,t)=>()=>({path:"/translations",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Lo=(e,t,r)=>()=>(o(String(e),"Key cannot be empty"),{path:`/translations/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Ho=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/users",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),_o=(e,t)=>()=>({path:"/users",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Vo=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/users/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"}),Mo=(e,t)=>()=>({path:"/users/me",params:t??{},body:JSON.stringify(e),method:"PATCH"});var Bo=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/versions",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),qo=(e,t)=>()=>({path:"/versions",params:t??{},body:JSON.stringify(e),method:"PATCH"}),zo=(e,t,r)=>()=>(o(e,"Key cannot be empty"),{path:`/versions/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Xo=(e,t,r)=>()=>(o(e,"Keys cannot be empty"),{path:"/webhooks",params:r??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Yo=(e,t,r)=>()=>(o(String(e),"Key cannot be empty"),{path:`/webhooks/${e}`,params:r??{},body:JSON.stringify(t),method:"PATCH"});var Zo=()=>()=>({method:"POST",path:"/utils/cache/clear"});var ea=(e,t,r,a)=>()=>({method:"POST",path:`/utils/export/${e}`,body:JSON.stringify({format:t,query:r,file:a})});var ta=(e,t,r)=>()=>e==="GET"?{path:`/flows/trigger/${t}`,params:r??{},method:"GET"}:{path:`/flows/trigger/${t}`,body:JSON.stringify(r??{}),method:"POST"};var ra=e=>()=>({method:"POST",path:"/utils/hash/generate",body:JSON.stringify({string:e})}),oa=(e,t)=>()=>({method:"POST",path:"/utils/hash/verify",body:JSON.stringify({string:e,hash:t})});var aa=(e,t)=>()=>({path:`/utils/import/${e}`,method:"POST",body:t,headers:{"Content-Type":"multipart/form-data"}});var sa=(e,t)=>()=>({path:`/operations/trigger/${e}`,body:JSON.stringify(t??{}),method:"POST"});var ma=(e,t,r="cookie")=>()=>({path:"/shares/auth",method:"POST",body:JSON.stringify({share:e,password:t,mode:r})}),ia=(e,t)=>()=>({path:"/shares/invite",method:"POST",body:JSON.stringify({share:e,emails:t})}),na=e=>()=>({path:`/shares/info/${e}`,method:"GET"});var ca=(e,t,r)=>()=>({method:"POST",path:`/utils/sort/${e}`,body:JSON.stringify({item:t,to:r})});var pa=(e,t,r)=>()=>({path:"/users/invite",method:"POST",body:JSON.stringify({email:e,role:t,...r?{invite_url:r}:{}})}),ua=(e,t)=>()=>({path:"/users/invite/accept",method:"POST",body:JSON.stringify({token:e,password:t})}),ha=(e,t,r={})=>()=>({path:"/users/register",method:"POST",body:JSON.stringify({email:e,password:t,...r})}),ya=e=>()=>({path:"/users/register/verify-email",params:{token:e},method:"GET"}),da=e=>()=>({path:"/users/me/tfa/generate",method:"POST",body:JSON.stringify({password:e})}),Sa=(e,t)=>()=>({path:"/users/me/tfa/enable",method:"POST",body:JSON.stringify({secret:e,otp:t})}),la=e=>()=>({path:"/users/me/tfa/disable",method:"POST",body:JSON.stringify({otp:e})});var fa=(e,t)=>()=>(o(e,"ID cannot be empty"),{path:`/versions/${e}/save`,method:"POST",body:JSON.stringify(t)}),Qa=e=>()=>(o(e,"ID cannot be empty"),{path:`/versions/${e}/compare`,method:"GET"}),xa=(e,t,r)=>()=>(o(e,"ID cannot be empty"),{path:`/versions/${e}/promote`,method:"POST",body:JSON.stringify(r?{mainHash:t,fields:r}:{mainHash:t})});var Ta=e=>()=>({method:"GET",path:"/utils/random/string",params:e!==void 0?{length:e}:{}});var Ca={},Ra=(e={})=>t=>{let r={...Ca,...e};return{async request(a){let s=a();if(s.headers||(s.headers={}),"Content-Type"in s.headers?s.headers["Content-Type"]==="multipart/form-data"&&delete s.headers["Content-Type"]:s.headers["Content-Type"]="application/json","getToken"in this){let u=await this.getToken();u&&(s.headers||(s.headers={}),s.headers.Authorization=`Bearer ${u}`)}let c=g(t.url,s.path,s.params),i={method:s.method??"GET",headers:s.headers??{}};"credentials"in r&&(i.credentials=r.credentials),s.body&&(i.body=s.body),s.onRequest&&(i=await s.onRequest(i)),r.onRequest&&(i=await r.onRequest(i));let p=await b(c.toString(),i,t.globals.fetch);return"onResponse"in s&&(p=await s.onResponse(p,i)),"onResponse"in e&&(p=await e.onResponse(p,i)),p}}};function ga(e,t){return()=>{let r=e();return typeof t=="function"?r.onRequest=t:r.onRequest=a=>({...a,...t}),r}}function ba(e){return()=>{let t=e();return t.method==="GET"&&t.params&&(t.method="SEARCH",t.body=JSON.stringify({query:{...t.params,fields:U(t.params.fields??[])}}),delete t.params),t}}function Da(e,t){return()=>{let r=t();return e&&(r.headers||(r.headers={}),r.headers.Authorization=`Bearer ${e}`),r}}function Oa(e){return()=>e}0&&(module.exports={acceptUserInvite,aggregate,auth,authenticateShare,authentication,clearCache,compareContentVersion,createCollection,createComment,createContentVersion,createContentVersions,createDashboard,createDashboards,createDirectus,createField,createFlow,createFlows,createFolder,createFolders,createItem,createItems,createNotification,createNotifications,createOperation,createOperations,createPanel,createPanels,createPermission,createPermissions,createPolicies,createPolicy,createPreset,createPresets,createRelation,createRole,createRoles,createShare,createShares,createTranslation,createTranslations,createUser,createUsers,createWebhook,createWebhooks,customEndpoint,deleteCollection,deleteComment,deleteContentVersion,deleteContentVersions,deleteDashboard,deleteDashboards,deleteField,deleteFile,deleteFiles,deleteFlow,deleteFlows,deleteFolder,deleteFolders,deleteItem,deleteItems,deleteNotification,deleteNotifications,deleteOperation,deleteOperations,deletePanel,deletePanels,deletePermission,deletePermissions,deletePolicies,deletePolicy,deletePreset,deletePresets,deleteRelation,deleteRole,deleteRoles,deleteShare,deleteShares,deleteTranslation,deleteTranslations,deleteUser,deleteUsers,deleteWebhook,deleteWebhooks,disableTwoFactor,enableTwoFactor,formatFields,generateHash,generateTwoFactorSecret,generateUid,getAuthEndpoint,graphql,importFile,inviteShare,inviteUser,login,logout,memoryStorage,messageCallback,passwordRequest,passwordReset,pong,promoteContentVersion,queryToParams,randomString,readActivities,readActivity,readAssetArrayBuffer,readAssetBlob,readAssetRaw,readCollection,readCollections,readContentVersion,readContentVersions,readDashboard,readDashboards,readExtensions,readField,readFields,readFieldsByCollection,readFile,readFiles,readFlow,readFlows,readFolder,readFolders,readGraphqlSdl,readItem,readItemPermissions,readItems,readMe,readNotification,readNotifications,readOpenApiSpec,readOperation,readOperations,readPanel,readPanels,readPermission,readPermissions,readPolicies,readPolicy,readPolicyGlobals,readPreset,readPresets,readProviders,readRelation,readRelationByCollection,readRelations,readRevision,readRevisions,readRole,readRoles,readRolesMe,readSettings,readShare,readShareInfo,readShares,readSingleton,readTranslation,readTranslations,readUser,readUserPermissions,readUsers,readWebhook,readWebhooks,realtime,refresh,registerUser,registerUserVerify,rest,saveToContentVersion,schemaApply,schemaDiff,schemaSnapshot,serverHealth,serverInfo,serverPing,sleep,staticToken,throwIfCoreCollection,throwIfEmpty,triggerFlow,triggerOperation,updateCollection,updateCollectionsBatch,updateComment,updateContentVersion,updateContentVersions,updateContentVersionsBatch,updateDashboard,updateDashboards,updateDashboardsBatch,updateExtension,updateField,updateFile,updateFiles,updateFilesBatch,updateFlow,updateFlows,updateFlowsBatch,updateFolder,updateFolders,updateFoldersBatch,updateItem,updateItems,updateItemsBatch,updateMe,updateNotification,updateNotifications,updateNotificationsBatch,updateOperation,updateOperations,updateOperationsBatch,updatePanel,updatePanels,updatePanelsBatch,updatePermission,updatePermissions,updatePermissionsBatch,updatePolicies,updatePoliciesBatch,updatePolicy,updatePreset,updatePresets,updatePresetsBatch,updateRelation,updateRole,updateRoles,updateRolesBatch,updateSettings,updateShare,updateShares,updateSharesBatch,updateSingleton,updateTranslation,updateTranslations,updateTranslationsBatch,updateUser,updateUsers,updateUsersBatch,updateWebhook,updateWebhooks,uploadFiles,utilitySort,utilsExport,utilsImport,verifyHash,withOptions,withSearch,withToken});
//# sourceMappingURL=index.cjs.map